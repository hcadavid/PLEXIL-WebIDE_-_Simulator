Date Lookup time;

//Set front wheels angle [-30..30]
Command TurnFrontWheels(Integer);

//Set rear wheels angle [-30..30]
Command TurnRearWheels(Integer); 

//Move forward with a given power level [0..100]
Command MoveForward(Integer); 

//Move backwards with a given power level [0..100]
Command MoveBackward(Integer); 

Command MoveSprinklerToLeft();

Command MoveSprinklerToRight();

Command OpenSprinkler();

Command CloseSprinkler();

//Stop
Command Stop();

Command pprint(...);

//*** Available Lookup Status Variables
//Heading
//StartRequested
//AbortRequested
//LeftSonarMeasuredDistance
//RightSonarMeasuredDistance
//CenterSonarMeasuredDistance


//EXAMPLE

RadialPesticide:
{
    
  Duration fwdelay = Duration ("PT10S"); 
  Duration tolerance = Duration ("PT0.1S");
    
  Integer steps=0;

  Sequence{

    ForwardTenSeconds:{
        StartMoving:{
            MoveForward(30);     
        }
        ForwardDelay:{
          Wait (fwdelay), tolerance;            
        }
    }

    Concurrence{    

      
      Integer currentAngle=0;
      Boolean timingComplete=false;

      Duration applicationInterval = Duration ("PT2S"); 
      

      TimedDistance:{
          Repeat true;  
          Wait (applicationInterval), tolerance;            
          pprint ("Time completed");
          timingComplete=true;
      }

      TurnWheelsS:{
          Start (timingComplete==true && currentAngle==30);
          Repeat true;
          timingComplete=false;
          TurnFrontWheels(0);
          currentAngle=0;
          OpenSprinkler();
      }

      TurnWheelsL:{
          Start (timingComplete==true && currentAngle==0);
          Repeat true;
          timingComplete=false;
          TurnFrontWheels(30);
          currentAngle=30;
          OpenSprinkler();
      }

    }

  }


}